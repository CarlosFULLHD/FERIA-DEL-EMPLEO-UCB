{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      chats: [{\n        name: \"Chatbot 1\",\n        messages: [{\n          text: \"Bienvenido!\",\n          type: \"bot\"\n        }, {\n          text: \"Este es el link?\",\n          type: \"bot\"\n        }]\n      }, {\n        name: \"Chatbot 2\",\n        messages: [{\n          text: \"Hola!\",\n          type: \"bot\"\n        }, {\n          text: \"Este es el link?\",\n          type: \"bot\"\n        }]\n      }],\n      selectedChatIndex: 0,\n      newMessage: \"\"\n    };\n  },\n  computed: {\n    selectedChat() {\n      return this.chats[this.selectedChatIndex];\n    }\n  },\n  methods: {\n    selectChat(index) {\n      this.selectedChatIndex = index;\n    },\n    sendMessage() {\n      const message = {\n        text: this.newMessage,\n        type: \"user\"\n      };\n      this.selectedChat.messages.push(message);\n      this.newMessage = \"\";\n      setTimeout(() => {\n        if (this.newMessage === '1') {\n          const reply = {\n            text: \"Que tal este es mi link\",\n            type: \"bot\"\n          };\n          this.selectedChat.messages.push(reply);\n        } else if (this.newMessage == '2') {\n          const reply = {\n            text: \"Que tal esta es mi informacion de contacto 777XXXXX \",\n            type: \"bot\"\n          };\n          this.selectedChat.messages.push(reply);\n        } else {\n          const reply = {\n            text: \"Lo siento, porfavor ingresa solo numeros\",\n            type: \"bot\"\n          };\n          this.selectedChat.messages.push(reply);\n        }\n      }, 1000);\n    },\n    validateNumber: function () {\n      if (this.selectedNumber !== '1' && this.selectedNumber !== '2') {\n        this.selectedNumber = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","chats","name","messages","text","type","selectedChatIndex","newMessage","computed","selectedChat","methods","selectChat","index","sendMessage","message","push","setTimeout","reply","validateNumber","selectedNumber"],"sources":["src/views/ChatsView.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n      <nav class=\"navChat\">\r\n        <ul>\r\n          <li v-for=\"(chat, index) in chats\" :key=\"index\">\r\n            <a href=\"#\" @click=\"selectChat(index)\">\r\n              {{ chat.name }}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div class=\"main\">\r\n        <div class=\"chat-container\">\r\n          <div class=\"head\">\r\n            <h2>{{ selectedChat.name }}</h2>\r\n          </div>\r\n          <div class=\"messages\">\r\n            <div v-for=\"(message, index) in selectedChat.messages\" :key=\"index\">\r\n              <div :class=\"['message', message.type]\">{{ message.text }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"input\">\r\n            <input type=\"text\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" v-on:input=\"validateNumber\" placeholder=\"Escribe tu mensaje...\">\r\n            <button class=\"send\" @click=\"sendMessage\">Enviar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        chats: [\r\n          {\r\n            name: \"Chatbot 1\",\r\n            messages: [\r\n              { text: \"Bienvenido!\", type: \"bot\" },\r\n              { text: \"Este es el link?\", type: \"bot\" }\r\n            ]\r\n          },\r\n          {\r\n            name: \"Chatbot 2\",\r\n            messages: [\r\n              { text: \"Hola!\", type: \"bot\" },\r\n              { text: \"Este es el link?\", type: \"bot\" }\r\n            ]\r\n          }\r\n        ],\r\n        selectedChatIndex: 0,\r\n        newMessage: \"\"\r\n      };\r\n    },\r\n    computed: {\r\n      selectedChat() {\r\n        return this.chats[this.selectedChatIndex];\r\n      }\r\n    },\r\n    methods: {\r\n      selectChat(index) {\r\n        this.selectedChatIndex = index;\r\n      },\r\n      sendMessage() {\r\n        const message = { text: this.newMessage, type: \"user\" };\r\n        this.selectedChat.messages.push(message);\r\n        this.newMessage = \"\";\r\n        setTimeout(() => {\r\n          if (this.newMessage === '1') {\r\n            const reply = { text: \"Que tal este es mi link\", type: \"bot\" };\r\n            this.selectedChat.messages.push(reply);\r\n          }\r\n          else if (this.newMessage == '2') {\r\n            const reply = { text: \"Que tal esta es mi informacion de contacto 777XXXXX \", type: \"bot\" };\r\n            this.selectedChat.messages.push(reply);\r\n          }\r\n          else{\r\n            const reply = { text: \"Lo siento, porfavor ingresa solo numeros\", type: \"bot\" };\r\n            this.selectedChat.messages.push(reply);\r\n          }\r\n        }, 1000);\r\n      },\r\n      validateNumber: function () {\r\n        if (this.selectedNumber !== '1' && this.selectedNumber !== '2') {\r\n          this.selectedNumber = '';\r\n        }\r\n      }\r\n      \r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .head{\r\n    background-color: #2e3748;\r\n    opacity: 0.9;\r\n    width: 100%;\r\n    height: fit-content;\r\n  }\r\n  .head h2{\r\n    color: white;\r\n  }\r\n  .send {\r\n  background-color: blue;\r\n  color: white;\r\n  font-size: 16px;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n  .wrapper {\r\n    display: flex;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .navChat {\r\n    background-color: #ffd717;\r\n    opacity: 0.9;\r\n    color: black;\r\n    padding: 20px;\r\n    width: 200px;\r\n  }\r\n  \r\n  .navChat ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .navChat li {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .navChat a {\r\n    color: black;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .main {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  \r\n  .chat-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    padding: 5px;\r\n  }\r\n  \r\n  .messages {\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  display: inline-block;\r\n}\r\n\r\n.message {\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n  \r\n  .user {\r\n    background-color: #71a1f4;\r\n  }\r\n  \r\n  .bot {\r\n    background-color: #f1f1f1;\r\n  }\r\n  \r\n  .input {\r\n    display: flex;\r\n  }\r\n  \r\n  .input input {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n   \r\n  }\r\n  </style> \r\n  <!--\r\n  <template>\r\n    <div class=\"wrapper\">\r\n      <nav class=\"navChat\">\r\n        <ul>\r\n          <li v-for=\"(chat, index) in chats\" :key=\"index\">\r\n            <a href=\"#\" @click=\"selectChat(index)\">\r\n              {{ chatbot.name }}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div class=\"main\">\r\n        <div class=\"chat-container\">\r\n          <h2>{{ chatbot.name }}</h2>\r\n          <p>{{ chatbot.description }}</p>\r\n          <div class=\"messages\">\r\n            <div v-for=\"(message, index) in selectedChat.messages\" :key=\"index\">\r\n              <div :class=\"['message', message.type]\">{{ message.text }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"input\">\r\n            <input type=\"text\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"Type your message...\">\r\n            <button @click=\"sendMessage\">Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </template>\r\n  \r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data() {\r\n      return {\r\n        chats: [\r\n        axios.get('/chats_empresas')\r\n        .then(response => {\r\n          this.chatbots = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        })\r\n        ],\r\n        selectedChatIndex: 0,\r\n        newMessage: \"\"\r\n      };\r\n    },\r\n    computed: {\r\n      selectedChat() {\r\n        return this.chats[this.selectedChatIndex];\r\n      }\r\n    },\r\n    methods: {\r\n      selectChat(index) {\r\n        this.selectedChatIndex = index;\r\n      },\r\n      sendMessage() {\r\n        const message = { text: this.newMessage, type: \"user\" };\r\n        this.selectedChat.messages.push(message);\r\n        this.newMessage = \"\";\r\n        setTimeout(() => {\r\n          axios.get('/chats_empresas')\r\n          .then(response => {\r\n            this.chatbots = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n          this.selectedChat.messages.push(reply);\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n  \r\n</script>\r\n<style>\r\n  /* Estilos por defecto */\r\n.chatbot {\r\n  width: 300px;\r\n  height: 500px;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n}\r\n\r\n/* Estilos para pantallas peque√±as */\r\n@media screen and (max-width: 767px) {\r\n  .chatbot {\r\n    width: 100%;\r\n    height: 60px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    right: 0;\r\n  }\r\n  \r\n  .chatbot .toggle-button {\r\n    display: none;\r\n  }\r\n  \r\n  .chatbot .messages {\r\n    display: none;\r\n  }\r\n  \r\n  .chatbot .input {\r\n    width: 100%;\r\n  }\r\n}\r\n.wrapper {\r\n    display: flex;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .navChat {\r\n    background-color: #333;\r\n    color: #fff;\r\n    padding: 20px;\r\n    width: 200px;\r\n  }\r\n  \r\n  .navChat ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .navChat li {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .navChat a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .main {\r\n    flex: 1;\r\n    background-color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .chat-container {\r\n    width: 400px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .messages {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .message {\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .user {\r\n    background-color: #eee;\r\n  }\r\n  \r\n  .bot {\r\n    background-color: #f1f1f1;\r\n  }\r\n  \r\n  .input {\r\n    display: flex;\r\n  }\r\n  \r\n  .input input {\r\n    flex: 1;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n   \r\n  }\r\n</style>\r\n   -->"],"mappings":";AA+BA;EACAA,KAAA;IACA;MACAC,KAAA,GACA;QACAC,IAAA;QACAC,QAAA,GACA;UAAAC,IAAA;UAAAC,IAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,IAAA;QAAA;MAEA,GACA;QACAH,IAAA;QACAC,QAAA,GACA;UAAAC,IAAA;UAAAC,IAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,IAAA;QAAA;MAEA,EACA;MACAC,iBAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA,YAAAR,KAAA,MAAAK,iBAAA;IACA;EACA;EACAI,OAAA;IACAC,WAAAC,KAAA;MACA,KAAAN,iBAAA,GAAAM,KAAA;IACA;IACAC,YAAA;MACA,MAAAC,OAAA;QAAAV,IAAA,OAAAG,UAAA;QAAAF,IAAA;MAAA;MACA,KAAAI,YAAA,CAAAN,QAAA,CAAAY,IAAA,CAAAD,OAAA;MACA,KAAAP,UAAA;MACAS,UAAA;QACA,SAAAT,UAAA;UACA,MAAAU,KAAA;YAAAb,IAAA;YAAAC,IAAA;UAAA;UACA,KAAAI,YAAA,CAAAN,QAAA,CAAAY,IAAA,CAAAE,KAAA;QACA,OACA,SAAAV,UAAA;UACA,MAAAU,KAAA;YAAAb,IAAA;YAAAC,IAAA;UAAA;UACA,KAAAI,YAAA,CAAAN,QAAA,CAAAY,IAAA,CAAAE,KAAA;QACA,OACA;UACA,MAAAA,KAAA;YAAAb,IAAA;YAAAC,IAAA;UAAA;UACA,KAAAI,YAAA,CAAAN,QAAA,CAAAY,IAAA,CAAAE,KAAA;QACA;MACA;IACA;IACAC,cAAA,WAAAA,CAAA;MACA,SAAAC,cAAA,iBAAAA,cAAA;QACA,KAAAA,cAAA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}