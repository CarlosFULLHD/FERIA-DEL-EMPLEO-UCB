{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_calendar = _resolveComponent(\"v-calendar\");\n  return _openBlock(), _createBlock(_component_v_calendar, {\n    ref: \"calendar\",\n    modelValue: _ctx.value,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.value = $event;\n    }),\n    weekdays: _ctx.weekday,\n    type: _ctx.type,\n    events: _ctx.events,\n    \"event-overlap-mode\": _ctx.mode,\n    \"event-overlap-threshold\": 30,\n    \"event-color\": $options.getEventColor,\n    onChange: $options.getEvents\n  }, null, 8 /* PROPS */, [\"modelValue\", \"weekdays\", \"type\", \"events\", \"event-overlap-mode\", \"event-color\", \"onChange\"]);\n}","map":{"version":3,"names":["_createBlock","_component_v_calendar","ref","_ctx","value","$event","weekdays","weekday","type","events","mode","$options","getEventColor","onChange","getEvents"],"sources":["C:\\Files\\Repositories\\VueJS\\FeriaEmpleoUCB\\front_end\\src\\views\\CalendarioView.vue"],"sourcesContent":["<template>\r\n    <v-calendar\r\n        ref=\"calendar\"\r\n        v-model=\"value\"\r\n        :weekdays=\"weekday\"\r\n        :type=\"type\"\r\n        :events=\"events\"\r\n        :event-overlap-mode=\"mode\"\r\n        :event-overlap-threshold=\"30\"\r\n        :event-color=\"getEventColor\"\r\n        @change=\"getEvents\"\r\n      ></v-calendar>\r\n\r\n</template>\r\n<script>\r\n  export default {\r\n    data: () => ({\r\n      type: 'month',\r\n      types: ['month', 'week', 'day', '4day'],\r\n      mode: 'stack',\r\n      modes: ['stack', 'column'],\r\n      weekday: [0, 1, 2, 3, 4, 5, 6],\r\n      weekdays: [\r\n        { text: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\r\n        { text: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\r\n        { text: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\r\n        { text: 'Mon, Wed, Fri', value: [1, 3, 5] },\r\n      ],\r\n      value: '',\r\n      events: [],\r\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\r\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\r\n    }),\r\n    methods: {\r\n      getEvents ({ start, end }) {\r\n        const events = []\r\n\r\n        const min = new Date(`${start.date}T00:00:00`)\r\n        const max = new Date(`${end.date}T23:59:59`)\r\n        const days = (max.getTime() - min.getTime()) / 86400000\r\n        const eventCount = this.rnd(days, days + 20)\r\n\r\n        for (let i = 0; i < eventCount; i++) {\r\n          const allDay = this.rnd(0, 3) === 0\r\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\r\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\r\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\r\n          const second = new Date(first.getTime() + secondTimestamp)\r\n\r\n          events.push({\r\n            name: this.names[this.rnd(0, this.names.length - 1)],\r\n            start: first,\r\n            end: second,\r\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\r\n            timed: !allDay,\r\n          })\r\n        }\r\n\r\n        this.events = events\r\n      },\r\n      getEventColor (event) {\r\n        return event.color\r\n      },\r\n      rnd (a, b) {\r\n        return Math.floor((b - a + 1) * Math.random()) + a\r\n      },\r\n    },\r\n  }\r\n</script>\r\n  \r\n \r\n \r\n  "],"mappings":";;;uBACIA,YAAA,CAUgBC,qBAAA;IATZC,GAAG,EAAC,UAAU;gBACLC,IAAA,CAAAC,KAAK;;aAALD,IAAA,CAAAC,KAAK,GAAAC,MAAA;IAAA;IACbC,QAAQ,EAAEH,IAAA,CAAAI,OAAO;IACjBC,IAAI,EAAEL,IAAA,CAAAK,IAAI;IACVC,MAAM,EAAEN,IAAA,CAAAM,MAAM;IACd,oBAAkB,EAAEN,IAAA,CAAAO,IAAI;IACxB,yBAAuB,EAAE,EAAE;IAC3B,aAAW,EAAEC,QAAA,CAAAC,aAAa;IAC1BC,QAAM,EAAEF,QAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}