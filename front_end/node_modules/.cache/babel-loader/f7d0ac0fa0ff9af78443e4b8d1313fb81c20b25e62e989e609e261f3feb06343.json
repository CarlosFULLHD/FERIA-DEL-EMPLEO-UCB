{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"HOLA\", -1 /* HOISTED */);\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"HOLA\", -1 /* HOISTED */);\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"HOLA\", -1 /* HOISTED */);\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"HOLA\", -1 /* HOISTED */);\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"HOLA\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_calendar = _resolveComponent(\"v-calendar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _createVNode(_component_v_calendar, {\n    modelValue: $data.selectedDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.selectedDate = $event;\n    }),\n    events: $data.events,\n    \"event-color\": $options.getEventColor,\n    \"event-overlap-mode\": $data.mode,\n    \"event-overlap-threshold\": 30,\n    type: $data.type,\n    weekdays: $data.weekdays,\n    onChange: $options.fetchEvents\n  }, null, 8 /* PROPS */, [\"modelValue\", \"events\", \"event-color\", \"event-overlap-mode\", \"type\", \"weekdays\", \"onChange\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_v_calendar","$data","selectedDate","$event","events","$options","getEventColor","mode","type","weekdays","onChange","fetchEvents"],"sources":["C:\\Files\\Repositories\\VueJS\\FeriaEmpleoUCB\\front_end\\src\\views\\CalendarioView.vue"],"sourcesContent":["<template>\r\n  <h1>HOLA</h1>\r\n  <h1>HOLA</h1>\r\n  <h1>HOLA</h1>\r\n  <h1>HOLA</h1>\r\n  <h1>HOLA</h1>\r\n  <v-calendar\r\n    v-model=\"selectedDate\"\r\n    :events=\"events\"\r\n    :event-color=\"getEventColor\"\r\n    :event-overlap-mode=\"mode\"\r\n    :event-overlap-threshold=\"30\"\r\n    :type=\"type\"\r\n    :weekdays=\"weekdays\"\r\n    @change=\"fetchEvents\"\r\n  >\r\n  </v-calendar>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: new Date(),\r\n      events: [\r\n        {\r\n          name: \"Meeting\",\r\n          start: \"2023-05-01T10:30:00\",\r\n          end: \"2023-05-01T12:30:00\",\r\n          color: \"blue\"\r\n        },\r\n        {\r\n          name: \"Lunch\",\r\n          start: \"2023-05-01T12:00:00\",\r\n          end: \"2023-05-01T13:30:00\",\r\n          color: \"green\"\r\n        },\r\n        {\r\n          name: \"Conference\",\r\n          start: \"2023-05-02T12:30:00\",\r\n          end: \"2023-05-03T16:30:00\",\r\n          color: \"purple\"\r\n        }\r\n      ],\r\n      mode: \"stack\",\r\n      type: \"month\",\r\n      weekdays: [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    getEventColor(event) {\r\n      return event.color;\r\n    },\r\n    fetchEvents(start, end) {\r\n      // Fetch events for the selected range and update the events array\r\n      // based on the response\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";8BACEA,mBAAA,CAAa,YAAT,MAAI;8BACRA,mBAAA,CAAa,YAAT,MAAI;8BACRA,mBAAA,CAAa,YAAT,MAAI;8BACRA,mBAAA,CAAa,YAAT,MAAI;8BACRA,mBAAA,CAAa,YAAT,MAAI;;;;6DAJRC,UAAa,EACbC,UAAa,EACbC,UAAa,EACbC,UAAa,EACbC,UAAa,EACbC,YAAA,CAUaC,qBAAA;gBATFC,KAAA,CAAAC,YAAY;;aAAZD,KAAA,CAAAC,YAAY,GAAAC,MAAA;IAAA;IACpBC,MAAM,EAAEH,KAAA,CAAAG,MAAM;IACd,aAAW,EAAEC,QAAA,CAAAC,aAAa;IAC1B,oBAAkB,EAAEL,KAAA,CAAAM,IAAI;IACxB,yBAAuB,EAAE,EAAE;IAC3BC,IAAI,EAAEP,KAAA,CAAAO,IAAI;IACVC,QAAQ,EAAER,KAAA,CAAAQ,QAAQ;IAClBC,QAAM,EAAEL,QAAA,CAAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}